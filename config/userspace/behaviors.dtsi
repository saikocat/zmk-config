// Copyright 2023 saikocat (@saikocat)
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>

#include "behaviors.h"

&mt {
    flavor = "tap-preferred";
    tapping-term-ms = <TAPPING_TERM>;
    quick-tap-ms = <TAPPING_TERM>;          // disable TAPPING_FORCE_HOLD - allow holding down BSPC repeatedly
};

&lt {
    flavor = "balanced";
    tapping-term-ms = <TAPPING_TERM>;
    quick-tap-ms = <QUICK_TAP_MS>;
};

&sk {
    release-after-ms = <SK_RELEASE_AFTER>;
};

&caps_word {
    continue-list = <UNDERSCORE MINUS BSPC RSHFT LSHFT>;
};

/ {
    behaviors {
        skq: sticky_key_quick_release {
            label = "STICKY_KEY_QUICK_RELEASE";
            compatible = "zmk,behavior-sticky-key";
            #binding-cells = <1>;
            bindings = <&kp>;
            release-after-ms = <SK_RELEASE_AFTER>;
            quick-release;
        };
        ht: hold_tap {
            label = "HOLD_TAP";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <TAPPING_TERM>;
            quick-tap-ms = <QUICK_TAP_MS>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };

        // tap: skq shift | double-tap: caps_word
        omss_caps_dance: omss_caps_dance {
            label = "OMSS_CAPS_DANCE";
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <TAPPING_TERM>;
            bindings = <&skq LSHFT>, <&caps_word>;
        };
    };
};
